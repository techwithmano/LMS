// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  password      String
  role          Role      @default(STUDENT)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  courses       Course[]  @relation("EnrolledCourses")
  taughtCourses Course[]  @relation("TeachingCourses")
  assignments   Assignment[]
  submissions   Submission[]
  messages      Message[]  @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")
}

model Course {
  id          String    @id @default(cuid())
  title       String
  description String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  teacher     User      @relation("TeachingCourses", fields: [teacherId], references: [id])
  teacherId   String
  students    User[]    @relation("EnrolledCourses")
  assignments Assignment[]
  modules     Module[]
}

model Module {
  id          String    @id @default(cuid())
  title       String
  content     String
  order       Int
  course      Course    @relation(fields: [courseId], references: [id])
  courseId    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Assignment {
  id          String    @id @default(cuid())
  title       String
  description String
  dueDate     DateTime
  course      Course    @relation(fields: [courseId], references: [id])
  courseId    String
  teacher     User      @relation(fields: [teacherId], references: [id])
  teacherId   String
  submissions Submission[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Submission {
  id           String    @id @default(cuid())
  content      String
  grade        Float?
  feedback     String?
  assignment   Assignment @relation(fields: [assignmentId], references: [id])
  assignmentId String
  student      User      @relation(fields: [studentId], references: [id])
  studentId    String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Message {
  id          String    @id @default(cuid())
  content     String
  sender      User      @relation("SentMessages", fields: [senderId], references: [id])
  senderId    String
  receiver    User      @relation("ReceivedMessages", fields: [receiverId], references: [id])
  receiverId  String
  read        Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum Role {
  STUDENT
  TEACHER
  ADMIN
} 